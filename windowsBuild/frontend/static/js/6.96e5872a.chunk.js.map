{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","app/routing/pages/system.tsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","System","dispatch","useDispatch","useState","data","setData","ws","useContext","WebSocketContext","onSubmit","event","preventDefault","sendMessage","onChange","target","type","onClick","closeBackend"],"mappings":"wHAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,G,2CImCvFC,UAlCA,WACX,IAAMC,EAAWC,wBADA,IAOOC,mBAAS,WAPhB,GAOVC,EAPU,KAOJC,EAPI,KAaXC,EAAKC,qBAAWC,KAMtB,OACI,6BACI,0BAAMC,SAPO,SAACC,GAClBA,EAAMC,iBACJ,OAAFL,QAAE,IAAFA,KAAIM,YAAY,OAAQR,KAMhB,kDACA,2BAAOT,MAAOS,EAAMS,SAfS,SAAAH,GAAU,IACxCf,EAASe,EAAMI,OAAfnB,MACPU,EAAQV,MAcA,4BAAQoB,KAAK,UAAb,wBAEJ,6BACI,0DACA,4BAAQC,QAzBE,WAClBf,EAASgB,iBAwBD","file":"static/js/6.96e5872a.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {FormEvent, useContext, useState} from 'react';\nimport {useDispatch} from \"react-redux\";\nimport {closeBackend} from \"../../../features/responseDisplay/jsonSlice\";\nimport {InputChangeHandler} from \"../../../utilities/types\";\nimport {WebSocketContext} from \"../../../websocket/websocketProvider\";\n\nconst System = () => {\n    const dispatch = useDispatch();\n\n    const onCloseServer = () => {\n        dispatch(closeBackend());\n    };\n\n    const [data, setData] = useState(\"not set\");\n    const handleChange: InputChangeHandler = event => {\n        const {value} = event.target;\n        setData(value);\n    };\n\n    const ws = useContext(WebSocketContext);\n    const onFormSubmit = (event: FormEvent) => {\n        event.preventDefault();\n        ws?.sendMessage(\"user\", data)\n    };\n\n    return (\n        <div>\n            <form onSubmit={onFormSubmit}>\n                <label>Message Backend</label>\n                <input value={data} onChange={handleChange}/>\n                <button type=\"submit\">Send over websocket</button>\n            </form>\n            <div>\n                <label>To Close Backend server</label>\n                <button onClick={onCloseServer}>Close</button>\n            </div>\n        </div>\n    );\n};\n\nexport default System;\n"],"sourceRoot":""}